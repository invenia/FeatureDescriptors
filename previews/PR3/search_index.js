var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = FeatureDescriptors","category":"page"},{"location":"#FeatureDescriptors","page":"Home","title":"FeatureDescriptors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [FeatureDescriptors]","category":"page"},{"location":"#FeatureDescriptors.Descriptor","page":"Home","title":"FeatureDescriptors.Descriptor","text":"Descriptor\n\nThe Descriptors interface lets users define the properties and relationships between the features being used in their models or other data-intensive workflows.\n\nDescriptor supertypes define some general properties that can be overloaded for specific subtypes as required, such as the tables to load or the quantitative variable to use.\n\nUsers may define their own Descriptor` type system for their own purposes but must extend the following methods:\n\nsources: The sources for the data needed to build the Desriptor feature.\nquantity_key: The quantitative variable for the Descriptor.\ncategorical_keys: The categorical variables for the Descriptor.\n\n\n\n\n\n","category":"type"},{"location":"#FeatureDescriptors.categorical_keys","page":"Home","title":"FeatureDescriptors.categorical_keys","text":"categorical_keys(::Descriptor) -> Vector\n\nReturns the categorical variables for the Descriptor, e.g. [:colour, :shape]. Returns an empty vector if no categorical variables exist.\n\n\n\n\n\n","category":"function"},{"location":"#FeatureDescriptors.label-Tuple{Type{var\"#s3\"} where var\"#s3\"<:Descriptor}","page":"Home","title":"FeatureDescriptors.label","text":"label(D::Descriptor) -> Symbol\n\nReturns a symbol representation of the Descriptor.\n\n\n\n\n\n","category":"method"},{"location":"#FeatureDescriptors.quantity_key","page":"Home","title":"FeatureDescriptors.quantity_key","text":"quantity_key(::Descriptor) -> Symbol\n\nReturns the quantitative variable for the Descriptor, e.g. :temperature.\n\n\n\n\n\n","category":"function"},{"location":"#FeatureDescriptors.sources","page":"Home","title":"FeatureDescriptors.sources","text":"sources(::Descriptor) -> Vector{String}\n\nReturns the data sources for the Descriptor, e.g. the names or paths to the tables containing the required data: [\"temperature.csv\", \"locations.csv\"].\n\n\n\n\n\n","category":"function"},{"location":"#TestUtils","page":"Home","title":"TestUtils","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [FeatureDescriptors.TestUtils]","category":"page"},{"location":"#FeatureDescriptors.TestUtils","page":"Home","title":"FeatureDescriptors.TestUtils","text":"FeatureDescriptors.TestUtils\n\nProvides a fake Descriptor for testing purposes and a test_interface function to check that any Descriptor subtype implements the expected API.\n\n\n\n\n\n","category":"module"},{"location":"#FeatureDescriptors.TestUtils.FakeDescriptor","page":"Home","title":"FeatureDescriptors.TestUtils.FakeDescriptor","text":"FakeDescriptor <: Descriptor\n\nA fake Descriptor for testing purposes only.\n\n\n\n\n\n","category":"type"},{"location":"#FeatureDescriptors.TestUtils.test_interface-Tuple{Any}","page":"Home","title":"FeatureDescriptors.TestUtils.test_interface","text":"TestUtils.test_interface(D::Type{<:Descriptor})\n\nTest that a subtype of Descriptor implements the expected API.\n\n\n\n\n\n","category":"method"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
